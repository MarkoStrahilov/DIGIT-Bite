h1, p {
    font-family: Lato;
  }
  .App {
    font-family: sans-serif;
    text-align: center;
  }
  
  .place_list {
    position: absolute;
    z-index: 1;
    padding: 20px;
    box-shadow: 0px 8px 10px 0px #0000002b;
  }
  
  .circle-container {
    position: relative;
    width: 400px;
    height: 400px;
    padding: 20px;
    /*2.8em = 2em*1.4 (2em = half the width of a link with img, 1.4 = sqrt(2))*/
    border-radius: 50%;
    margin: 60px auto;
  }
  .circle-container p {
    display: block;
    position: absolute;
    top: 50%; 
    left: 50%;
    width: 50px; 
    height: 50px;
    margin: -10px;
  }
  /* .circle-container img { display: block; width: 100%; } */
  .deg0 { transform: translate(200px); } /* 12em = half the width of the wrapper */
  .deg45 { transform: rotate(45deg) translate(200px) rotate(-45deg); }
  .deg90 { transform: rotate(90deg) translate(200px) rotate(-90deg); }
  .deg135 { transform: rotate(135deg) translate(200px) rotate(-135deg); }
  .deg180 { transform: translate(-200px); }
  .deg225 { transform: rotate(225deg) translate(200px) rotate(-225deg); }
  .deg270 { transform: rotate(270deg) translate(200px) rotate(90deg); }
  .deg315 { transform: rotate(315deg) translate(200px) rotate(-315deg); }

/* Add these styles to your global stylesheet or component-specific stylesheet */

/* Define a transition for the opacity property */
.fade-in-out {
  opacity: 1;
  transition: opacity 0.5s ease-in-out;
}

/* Set opacity to 0 when the component is exiting */
.fade-in-out-exit {
  opacity: 0;
}

/* Add this class when the component is entering */
.fade-in-out-enter {
  opacity: 0;
}

  